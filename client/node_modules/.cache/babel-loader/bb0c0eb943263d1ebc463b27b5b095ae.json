{"ast":null,"code":"//REDUCER\n\nimport { GET_ALL_VIDEOGAMES, GET_VIDEOGAME_BY_ID, CREATE_GAME, GET_GENRES, ORDER_ALPHABETICALLY, ORDER_BY_RAITING, FILTER_BY_GENRES, GET_VIDEOGAMES_BY_ORIGIN, GET_VIDEOGAMES_BY_NAME, DELETED_GAME, DELETE_STATES } from './action-types';\nconst initialState = {\n  videogames: [],\n  // este estado se llama cuando se ejecuta la app\n  getAllVideoGames: [],\n  getAllVideoGames2: [],\n  genres: [],\n  // este estado se llama cuando se ejecuta la app\n  details: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case GET_ALL_VIDEOGAMES:\n      if (state.videogames.length > 0) {\n        return {\n          videogames: state.videogames,\n          getAllVideoGames: state.getAllVideoGames\n        };\n      }\n      return {\n        ...state,\n        getAllVideoGames: payload,\n        videogames: payload,\n        details: []\n      };\n    case GET_VIDEOGAME_BY_ID:\n      return {\n        ...state,\n        details: payload\n      };\n    case CREATE_GAME:\n      return {\n        ...state\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        details: [],\n        genres: payload\n      };\n    case ORDER_ALPHABETICALLY:\n      const order = payload === 'asc' ? state.videogames.sort((a, b) => {\n        let nameA = a.name.toLowerCase();\n        let nameB = b.name.toLowerCase();\n        if (nameA > nameB) {\n          return 1;\n        }\n        if (nameB > nameA) {\n          return -1;\n        } else {\n          return 0;\n        }\n      }) : state.videogames.sort((a, b) => {\n        let nameA = a.name.toLowerCase();\n        let nameB = b.name.toLowerCase();\n        if (nameA > nameB) {\n          return -1;\n        }\n        if (nameB > nameA) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n      return {\n        ...state,\n        videogames: order,\n        getAllVideoGames: order,\n        getAllVideoGames2: order\n      };\n    case ORDER_BY_RAITING:\n      const ratingFiltered = payload === 'max' ? state.videogames.sort((a, b) => {\n        if (a.rating < b.rating) {\n          return 1;\n        }\n        if (b.rating < a.rating) {\n          return -1;\n        } else {\n          return 0;\n        }\n      }) : state.videogames.sort((a, b) => {\n        if (a.rating < b.rating) {\n          return -1;\n        }\n        if (b.rating < a.rating) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n      return {\n        ...state,\n        getAllVideoGames: ratingFiltered,\n        videogames: ratingFiltered,\n        getAllVideoGames2: ratingFiltered\n      };\n    case FILTER_BY_GENRES:\n      const allVideoGames = state.getAllVideoGames;\n      const filteredArr = allVideoGames.filter(el => el.genres.includes(payload));\n      return {\n        ...state,\n        getAllVideoGames: state.getAllVideoGames,\n        videogames: filteredArr\n      };\n    case GET_VIDEOGAMES_BY_ORIGIN:\n      let filterMyGames;\n      if (payload === 'Created') {\n        filterMyGames = state.getAllVideoGames.filter(el => el.createdInDb === true);\n        return {\n          ...state,\n          videogames: filterMyGames\n        };\n      } else if (payload === 'From Api') {\n        filterMyGames = state.getAllVideoGames.filter(el => !el.createdInDb);\n        return {\n          ...state,\n          videogames: filterMyGames\n        };\n      } else if (payload === 'All') {\n        filterMyGames = state.getAllVideoGames;\n        return {\n          ...state,\n          videogames: filterMyGames\n        };\n        break;\n      }\n      ;\n    case GET_VIDEOGAMES_BY_NAME:\n      return {\n        ...state,\n        videogames: payload\n      };\n    case DELETED_GAME:\n      return {\n        ...state,\n        videogames: payload\n      };\n    case DELETE_STATES:\n      return {\n        videogames: [],\n        getAllVideoGames: [],\n        genres: [],\n        details: []\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["GET_ALL_VIDEOGAMES","GET_VIDEOGAME_BY_ID","CREATE_GAME","GET_GENRES","ORDER_ALPHABETICALLY","ORDER_BY_RAITING","FILTER_BY_GENRES","GET_VIDEOGAMES_BY_ORIGIN","GET_VIDEOGAMES_BY_NAME","DELETED_GAME","DELETE_STATES","initialState","videogames","getAllVideoGames","getAllVideoGames2","genres","details","rootReducer","state","arguments","length","undefined","action","type","payload","order","sort","a","b","nameA","name","toLowerCase","nameB","ratingFiltered","rating","allVideoGames","filteredArr","filter","el","includes","filterMyGames","createdInDb"],"sources":["C:/Users/AgustÃ­n/Desktop/TOMAS PI/PI-FRONT/client/src/redux/reducer.js"],"sourcesContent":["//REDUCER\r\n\r\nimport {\r\n    GET_ALL_VIDEOGAMES,\r\n    GET_VIDEOGAME_BY_ID,\r\n    CREATE_GAME,\r\n    GET_GENRES,\r\n    ORDER_ALPHABETICALLY,\r\n    ORDER_BY_RAITING,\r\n    FILTER_BY_GENRES,\r\n    GET_VIDEOGAMES_BY_ORIGIN,\r\n    GET_VIDEOGAMES_BY_NAME,\r\n    DELETED_GAME,\r\n    DELETE_STATES,\r\n} from './action-types';\r\n\r\nconst initialState = {\r\n    videogames: [], // este estado se llama cuando se ejecuta la app\r\n    getAllVideoGames: [],\r\n    getAllVideoGames2: [],\r\n    genres: [], // este estado se llama cuando se ejecuta la app\r\n    details: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    const {\r\n        type,\r\n        payload\r\n    } = action;\r\n\r\n    switch (type) {\r\n        case GET_ALL_VIDEOGAMES:\r\n            if (state.videogames.length > 0) {\r\n                return {\r\n                    videogames: state.videogames,\r\n                    getAllVideoGames: state.getAllVideoGames\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                getAllVideoGames: payload,\r\n                videogames: payload,\r\n                details: [],\r\n            };\r\n        case GET_VIDEOGAME_BY_ID:\r\n            return {\r\n                ...state,\r\n                details: payload,\r\n            };\r\n        case CREATE_GAME:\r\n            return {\r\n                ...state,\r\n            };\r\n        case GET_GENRES:\r\n            return {\r\n                ...state,\r\n                details: [],\r\n                genres: payload,\r\n            };\r\n        case ORDER_ALPHABETICALLY:\r\n            const order = payload === 'asc' ?\r\n                state.videogames.sort((a, b) => {\r\n                    let nameA = a.name.toLowerCase();\r\n                    let nameB = b.name.toLowerCase();\r\n                    if (nameA > nameB) {\r\n                        return 1\r\n                    }\r\n                    if (nameB > nameA) {\r\n                        return -1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                }) :\r\n                state.videogames.sort((a, b) => {\r\n                    let nameA = a.name.toLowerCase();\r\n                    let nameB = b.name.toLowerCase();\r\n                    if (nameA > nameB) {\r\n                        return -1\r\n                    }\r\n                    if (nameB > nameA) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                });\r\n            return {\r\n                ...state,\r\n                videogames: order,\r\n                getAllVideoGames: order,\r\n                getAllVideoGames2: order,\r\n            };\r\n        case ORDER_BY_RAITING:\r\n            const ratingFiltered = payload === 'max' ?\r\n                state.videogames.sort((a, b) => {\r\n                    if (a.rating < b.rating) {\r\n                        return 1\r\n                    }\r\n                    if (b.rating < a.rating) {\r\n                        return -1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                }) :\r\n                state.videogames.sort((a, b) => {\r\n                    if (a.rating < b.rating) {\r\n                        return -1\r\n                    }\r\n                    if (b.rating < a.rating) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                });\r\n            return {\r\n                ...state,\r\n                getAllVideoGames: ratingFiltered,\r\n                videogames: ratingFiltered,\r\n                getAllVideoGames2: ratingFiltered,\r\n            };\r\n        case FILTER_BY_GENRES:\r\n            const allVideoGames = state.getAllVideoGames;\r\n            const filteredArr =\r\n                allVideoGames.filter(el => el.genres.includes(payload))\r\n            return {\r\n                ...state,\r\n                getAllVideoGames: state.getAllVideoGames,\r\n                videogames: filteredArr\r\n            };\r\n        case GET_VIDEOGAMES_BY_ORIGIN:\r\n            let filterMyGames;\r\n            if (payload === 'Created') {\r\n                filterMyGames = state.getAllVideoGames.filter(el => el.createdInDb === true)\r\n                return {\r\n                    ...state,\r\n                    videogames: filterMyGames\r\n                }\r\n            } else if (payload === 'From Api') {\r\n                filterMyGames = state.getAllVideoGames.filter(el => !el.createdInDb)\r\n                return {\r\n                    ...state,\r\n                    videogames: filterMyGames\r\n                }\r\n            } else if (payload === 'All') {\r\n                filterMyGames = state.getAllVideoGames\r\n                return {\r\n                    ...state,\r\n                    videogames: filterMyGames\r\n                }\r\n            break;\r\n            };\r\n        case GET_VIDEOGAMES_BY_NAME:\r\n            return {\r\n                ...state,\r\n                videogames: payload\r\n            };\r\n\r\n        case DELETED_GAME:\r\n\r\n            return {\r\n                ...state,\r\n                videogames: payload\r\n            };\r\n\r\n        case DELETE_STATES:\r\n            return {\r\n                videogames: [],\r\n                getAllVideoGames: [],\r\n                genres: [],\r\n                details: [],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}