{"ast":null,"code":"//ACTIONS\nimport axios from 'axios';\nimport { GET_ALL_VIDEOGAMES, GET_VIDEOGAME_BY_ID, GET_GENRES, ORDER_ALPHABETICALLY, ORDER_BY_RAITING, FILTER_BY_GENRES, GET_VIDEOGAMES_BY_ORIGIN, GET_VIDEOGAMES_BY_NAME, DELETED_GAME, DELETE_STATES } from './types.js';\nexport const getAllVideoGames = () => {\n  return async function (dispatch) {\n    let response = await axios.get(`${process.env.REACT_APP_API}videogames`, {});\n    return dispatch({\n      type: GET_ALL_VIDEOGAMES,\n      payload: response.data\n    });\n  };\n};\nexport const getDetailVideoGame = id => {\n  return async function (dispatch) {\n    try {\n      let response = await axios.get(`${process.env.REACT_APP_API}videogames/${id}`);\n      return dispatch({\n        type: GET_VIDEOGAME_BY_ID,\n        payload: response.data\n      });\n    } catch (error) {\n      return {\n        error: 'No hay detalles para mostrar',\n        originalError: error\n      };\n    }\n  };\n};\nexport const createVideoGame = payload => {\n  return async function () {\n    try {\n      let {\n        name,\n        image,\n        description,\n        released,\n        rating,\n        platforms,\n        genres\n      } = payload;\n      let response = await axios.post(`${process.env.REACT_APP_API}videogames`, {\n        name,\n        image,\n        description,\n        releaseDate: new Date(released),\n        rating,\n        platforms,\n        genres\n      });\n      return response;\n    } catch (error) {\n      return {\n        error: \"Can't Create Videogame\",\n        originalError: error\n      };\n    }\n  };\n};\nexport const getGenres = payload => {\n  return async function (dispatch) {\n    try {\n      let response = await axios.get(`${process.env.REACT_APP_API}genres`, payload);\n      return dispatch({\n        type: GET_GENRES,\n        payload: response.data\n      });\n    } catch (error) {\n      return {\n        error: \"Can't Get Genres\",\n        originalError: error\n      };\n    }\n  };\n};\nexport const orderAlphabetically = payload => {\n  return {\n    type: ORDER_ALPHABETICALLY,\n    payload\n  };\n};\nexport const orderByRating = payload => {\n  return {\n    type: ORDER_BY_RAITING,\n    payload\n  };\n};\nexport const filterByGenres = payload => {\n  return {\n    type: FILTER_BY_GENRES,\n    payload\n  };\n};\nexport const getVideoGamesByOrigin = payload => {\n  return {\n    type: GET_VIDEOGAMES_BY_ORIGIN,\n    payload\n  };\n};\nexport const getVideogameByName = name => {\n  return async function (dispatch) {\n    try {\n      let response = await axios.get(`${process.env.REACT_APP_API}videogames?name=${name}`);\n      return dispatch({\n        type: GET_VIDEOGAMES_BY_NAME,\n        payload: response.data\n      });\n    } catch (err) {\n      return {\n        error: \"No games found with that name.\",\n        originalError: err\n      };\n    }\n  };\n};\nexport const deleteVideoGame = id => {\n  return async function (dispatch) {\n    try {\n      console.log(id);\n      let response = await axios.delete(`${process.env.REACT_APP_API}videogames/${id}`);\n      return dispatch({\n        type: DELETED_GAME,\n        payload: response.data\n      });\n    } catch (error) {\n      return {\n        error: 'No se pudo eliminar el juego',\n        originalError: error\n      };\n    }\n  };\n};\nexport const deleteStates = () => {\n  return async function (dispatch) {\n    return dispatch({\n      type: DELETE_STATES\n    });\n  };\n};\nexport const searchGameByPlatforms = () => {};\nexport const modifyVideoGame = payload => {};","map":{"version":3,"names":["axios","GET_ALL_VIDEOGAMES","GET_VIDEOGAME_BY_ID","GET_GENRES","ORDER_ALPHABETICALLY","ORDER_BY_RAITING","FILTER_BY_GENRES","GET_VIDEOGAMES_BY_ORIGIN","GET_VIDEOGAMES_BY_NAME","DELETED_GAME","DELETE_STATES","getAllVideoGames","dispatch","response","get","process","env","REACT_APP_API","type","payload","data","getDetailVideoGame","id","error","originalError","createVideoGame","name","image","description","released","rating","platforms","genres","post","releaseDate","Date","getGenres","orderAlphabetically","orderByRating","filterByGenres","getVideoGamesByOrigin","getVideogameByName","err","deleteVideoGame","console","log","delete","deleteStates","searchGameByPlatforms","modifyVideoGame"],"sources":["C:/Users/AgustÃ­n/Desktop/TOMAS PI/TOMAS-PI-Videogames-main/client/src/actions/index.js"],"sourcesContent":["//ACTIONS\r\nimport axios from 'axios';\r\nimport {\r\n    GET_ALL_VIDEOGAMES,\r\n    GET_VIDEOGAME_BY_ID,\r\n    GET_GENRES,\r\n    ORDER_ALPHABETICALLY,\r\n    ORDER_BY_RAITING,\r\n    FILTER_BY_GENRES,\r\n    GET_VIDEOGAMES_BY_ORIGIN,\r\n    GET_VIDEOGAMES_BY_NAME,\r\n    DELETED_GAME,\r\n    DELETE_STATES,\r\n} from './types.js'\r\n\r\n\r\nexport const getAllVideoGames = () => {\r\n    return async function (dispatch) {\r\n        let response = await axios.get(`${process.env.REACT_APP_API}videogames`, {})\r\n        return dispatch({\r\n            type: GET_ALL_VIDEOGAMES,\r\n            payload: response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getDetailVideoGame = (id) => {\r\n    return async function (dispatch) {\r\n        try {\r\n            let response = await axios.get(`${process.env.REACT_APP_API}videogames/${id}`);\r\n            return dispatch({\r\n                type: GET_VIDEOGAME_BY_ID,\r\n                payload: response.data\r\n            })\r\n        } catch (error) {\r\n            return {\r\n                error: 'No hay detalles para mostrar',\r\n                originalError: error,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const createVideoGame = (payload) => {\r\n    return async function () {\r\n        try {\r\n            let {\r\n                name,\r\n                image,\r\n                description,\r\n                released,\r\n                rating,\r\n                platforms,\r\n                genres\r\n            } = payload;\r\n            let response = await axios.post(`${process.env.REACT_APP_API}videogames`, {\r\n                name,\r\n                image,\r\n                description,\r\n                releaseDate: new Date(released),\r\n                rating,\r\n                platforms,\r\n                genres,\r\n            })\r\n            return response;\r\n        } catch (error) {\r\n            return {\r\n                error: \"Can't Create Videogame\",\r\n                originalError: error\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const getGenres = (payload) => {\r\n    return async function (dispatch) {\r\n        try {\r\n            let response = await axios.get(`${process.env.REACT_APP_API}genres`, payload)\r\n            return dispatch({\r\n                type: GET_GENRES,\r\n                payload: response.data\r\n            });\r\n        } catch (error) {\r\n            return {\r\n                error: \"Can't Get Genres\",\r\n                originalError: error\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const orderAlphabetically = (payload) => {\r\n    return {\r\n        type: ORDER_ALPHABETICALLY,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const orderByRating = (payload) => {\r\n    return {\r\n        type: ORDER_BY_RAITING,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const filterByGenres = (payload) => {\r\n    return {\r\n        type: FILTER_BY_GENRES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const getVideoGamesByOrigin = (payload) => {\r\n    return {\r\n        type: GET_VIDEOGAMES_BY_ORIGIN,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const getVideogameByName = (name) => {\r\n    return async function (dispatch) {\r\n        try {\r\n            let response = await axios.get(`${process.env.REACT_APP_API}videogames?name=${name}`)\r\n            return dispatch({\r\n                type: GET_VIDEOGAMES_BY_NAME,\r\n                payload: response.data\r\n            })\r\n        } catch (err) {\r\n            return {\r\n                error: \"No games found with that name.\",\r\n                originalError: err\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteVideoGame = (id) => {\r\n    return async function (dispatch) {\r\n        try {\r\n            console.log(id)\r\n            let response = await axios.delete(`${process.env.REACT_APP_API}videogames/${id}`)\r\n            return dispatch({\r\n                type: DELETED_GAME,\r\n                payload: response.data\r\n            })\r\n        } catch (error) {\r\n            return {\r\n                error: 'No se pudo eliminar el juego',\r\n                originalError: error\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteStates = () => {\r\n    return async function (dispatch) {\r\n        return dispatch({\r\n            type: DELETE_STATES,\r\n        })\r\n    }\r\n}\r\n\r\nexport const searchGameByPlatforms = () => { }\r\nexport const modifyVideoGame = (payload) => { }\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}